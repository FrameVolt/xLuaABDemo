require "define"
--require "UtilFunc"
local this;

local isUpButtonPressing = false;
local isDownButtonPressing = false;
local isRightButtonPressing = false;
local isLeftButtonPressing = false;

function awake(self)
  this = self
end

function start()
  setEventTrigger('UpButton', function() isUpButtonPressing = true end, function() isUpButtonPressing = false end);
  setEventTrigger('DownButton', function() isDownButtonPressing = true end, function() isDownButtonPressing = false end);
  setEventTrigger('RightButton', function() isRightButtonPressing = true end, function() isRightButtonPressing = false end);
  setEventTrigger('LeftButton', function() isLeftButtonPressing = true end, function() isLeftButtonPressing = false end);
  

  --this:MyGetAsset("prefabbundle", "Coin", function(x) Instantiate(x); end);
  
  
  
end

function setEventTrigger(buttonName, beginClickFunc, endClickFunc)
  local buttonEventTrigger = this.transform:Find(buttonName):GetComponent("EventTrigger");
  local entry1 = EventTrigger.Entry();
  entry1.eventID = EventTriggerType.PointerDown;
  entry1.callback:AddListener(beginClickFunc);
  local entry2 = EventTrigger.Entry();
  entry2.eventID = EventTriggerType.PointerUp;
  entry2.callback:AddListener(endClickFunc);
  buttonEventTrigger.triggers:Add(entry1);
  buttonEventTrigger.triggers:Add(entry2);
end

function update()
  if isUpButtonPressing == true then
    EventManager.TriggerEvent(Notification(EventConsts.AXIS_EVENT,Vector3(0, 1, 0)));
  end
  if isDownButtonPressing == true then
    EventManager.TriggerEvent(Notification(EventConsts.AXIS_EVENT,Vector3(0, -1, 0)));
  end
  if isRightButtonPressing == true then
    EventManager.TriggerEvent(Notification(EventConsts.AXIS_EVENT,Vector3(1, 0, 0)));
  end
  if isLeftButtonPressing == true then
    EventManager.TriggerEvent(Notification(EventConsts.AXIS_EVENT,Vector3(-1, 0, 0)));
  end
end
